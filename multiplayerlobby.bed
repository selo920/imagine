--///////////////////////////////////////////////////////////////////////////
--// MultiplayerLobby.bed
--///////////////////////////////////////////////////////////////////////////
--// Copyright (c) 2004 Bugbear Entertainment ltd. 
--// All Rights Reserved.
--// 
--// Created on 11.6.2004 18:47:10
--// 
--// Authors: Pasi Matilainen (pasi.matilainen@bugbear.fi)
--///////////////////////////////////////////////////////////////////////////

dofile("data/menu/flags.bed")
dofile("data/menu/garage_elements1.bed")

local Layout={
	TrackFramePos=POS(284,86),
	GameTypePos=POS(299,69),
	TrackNamePos=POS(299,90),
	GameTypeColor=GetPaletteColor(33),
	TrackNameColor=GetPaletteColor(33),
	
	LabelTop=131,
	LabelHeight=13,
	LabelWidth=10,

	LabelFont=fontmedium(),
	LabelColor=GetPaletteColor(33),
	
	ReadyCenterX=55,
	ReadyCenterY=9,
	VoiceCenterX=76,
	VoiceCenterY=9,
	FlagLeft=315,
	FlagTop=1,
	NameLeft=93,
	CarCenter=408,
	UpgradesCenter=491,
	UpgradesTop=1,
	ScoreCenter=566,
	ScoreTop=-1,
	
	ListLeft=0,
	ListTop=151,
	RowHeight=18,
	RowPadding=2,
	
	ListFont=fontmedium(),
	ListFontColor=GetPaletteColor(34),
	CarChangingFontColor=GetPaletteColor(34),
	RankFont=wm.GetResource("FontRank"),
	RankColor=GetPaletteColor(0),
}

local CurrentTime
local KickBoxActive
local NameCarTime
local LastKickVoteActive
local ChangeOptionsWaitTime
local PrevNumPlayers
local PrevCanStart

local Error=false
local Mode

local LOBBY = 1
local SELECT_PLAYER = 2
local PLAYER_OPTIONS = 3
local CHANGE_UPGRADES = 4

local BuildLobbyMenuButtons

function ShowLobby(backmenu)
	ChangeOptionsWaitTime=nil
	if backmenu then
		menu_multiplayer_lobby.backmenu = backmenu
	end
	db.GameFlow.PostRace.Result=RESULT_NONE
	EnterMenu("menu_multiplayer_lobby")
end

local function SetNumRows(NumRows)
	wm.GetWindow("list"):SetNumRows(NumRows)
end

local function StartGameWithoutReadyPlayers()
	local numPlayers = Session:GetNumPlayers()
	for i = numPlayers, 1, -1 do
		local player = Session:GetPlayer(i)
		if player.Ready == false then
			Session:DeletePlayer(player)
		end
	end
	Session:StartRace()
end

local function StartRace()
	local i
	local allReady = true

	Session:GetLocalPlayer(1).Ready = true

	local numPlayers = Session:GetNumPlayers()
	for i = 1, numPlayers do
		local player = Session:GetPlayer(i)
		if player.Ready == false then
			allReady = false
			break
		end
	end
	
	if not allReady then
		GUI:HideMenuButtons()
		MessageBox(
			MULTIPLAYER_LOBBY_NOTREADY,
			MESSAGEBOX_YESNO,
			function(value)
				if value == TRUE then
					StartGameWithoutReadyPlayers()
				else
					GUI:ShowMenuButtons()
					GUI:SetActiveItem(table.getn(menu_multiplayer_lobby.items))
				end
			end
		)
	else
		Session:StartRace()
	end
end

local function GetFlagByNr(FlagNr)
	local nr=1
	for i,j in flagicons do
		if nr==FlagNr then
			return i
		end
		nr=nr+1
	end
	return nil
end

function ToggleReady()
	local player=Session:GetLocalPlayer(1)
	player.Ready = not player.Ready
	if player.Ready then
		local handler = InputHandler { Name="readyinputhandler" }
		handler.onKeyPressed = function(Self, Character, VirtualKey, ScanCode)
			if VirtualKey == KeyCodes["BUTTON_SELECT"] then
				ToggleReady()
				playmenusound_back()
			end
		end
				
		GUI:HideMenuButtons()
		local msg = wm.GetWindow("msg")
		msg:SetTitle(L"Waiting for host to start the game")
		msg:SetColor(GetPaletteColor(33), false)
		msg:ShowWindow()
		wm.ActivateWindow(handler)
		handler:SetFocus()
		GUI:SetHelpButtons(BUTTON_BACK, UI_BACK)
	else
		wm.GetWindow("msg"):HideWindow()
		wm.RemoveWindow(wm.GetWindow("readyinputhandler"))
		BuildLobbyMenuButtons()	
		GUI:SetHelpButtons(BUTTON_OK, UI_SELECT, BUTTON_BACK, UI_BACK)
	end
end

--- LOBBY ----------------------------------------------------

local function ChangeOptions()
	EnterChangeOptions(TITLE_MULTIPLAYER_GAMEOPTIONS, "menu_multiplayer_lobby")
end

local function ChangeCar()
	local carlist
	local carclass=Session:GetInfo().CarClass
	if carclass > 4 then
		return
	end
	
	if carclass == SessionInfo.CarClass.Any then
		carlist = CarlistAllCars()
	elseif carclass == SessionInfo.CarClass.Stunt then
		carlist = CarlistStuntCars()
	else
		carlist = CarlistFromClass(carclass, false, true)
	end
	
	Session:GetLocalPlayer(1).Status = ReplicatedPlayer.STATUS_CHANGING_CAR
	EnterCarSelection(
		function(car, skin)
			player = Session:GetLocalPlayer(1)
			player.Status = ReplicatedPlayer.STATUS_IN_LOBBY
			player.Car = car
			player.CarSkin = skin
--			player.Ready = true
			EnterMenu("menu_multiplayer_lobby")
		end,
		function()
			player = Session:GetLocalPlayer(1)
			player.Status = ReplicatedPlayer.STATUS_IN_LOBBY
			EnterMenu("menu_multiplayer_lobby")
		end,
		carlist,
		false,
		true
	)
end

local function SetEvents(events)
	Session:ClearAllRaces()
	info = Session:GetInfo()
	for i = 1, table.getn(events) do
		Session:AddRace()
		info.Races[i].StageNr = events[i].trackid
		info.Races[i].TrackType = events[i].rules
		info.Races[i].EventType = events[i].rules
		info.Races[i].LapsOrTimeLimit = events[i].lapsOrTimeLimit
		if info.Races[i].EventType == ReplicatedSession.GAMETYPE_HUNTER_PREY then
			info.Races[i].NumHunters = events[i].numhunters
		end
		info.Races[i].Raced = false
	end
	info.NextRace = 1
	EnterMenu("menu_multiplayer_lobby")
end

local function BuildTournament()
	local info = Session:GetInfo()
	local tournamenttype = info.TournamentType
	
	EnterBuildTournamentMenu(
		tournamenttype,
		SetEvents,
		entermenu("menu_multiplayer_lobby"),
		info.MaxPublicSlots + info.MaxPrivateSlots,
		true
	)
end

local function ChangeTrack()
	local info = Session:GetInfo()
	local race = info.Races[1]
	local event = { }

	event.trackid = race.StageNr
	event.rules = race.EventType
	event.lapsOrTimeLimit = race.LapsOrTimeLimit
	if race.EventType == ReplicatedSession.GAMETYPE_HUNTER_PREY then
		event.numhunters = race.NumHunters
	end
	
	EnterMultiplayerRaceEdit(
		false,
		info.TournamentType,
		event,
		function(event)
			SetEvents( { event } )
		end,
		entermenu("menu_multiplayer_lobby"),
		info.MaxPublicSlots + info.MaxPrivateSlots
	)
end

local function SessionDetails()
	EnterSessionDetails(TITLE_MULTIPLAYER_SESSIONDETAILS, "menu_multiplayer_lobby")
end

local function HideUpgrades(selectedUpgradeLevel)
	Session:GetLocalPlayer(1).UpgradeLevel = selectedUpgradeLevel
	menu_multiplayer_lobby.back()
end

local function ChangeUpgrades()
	Mode = CHANGE_UPGRADES
	
	local bgframe = Frame { Name="change_upgrades_bg", Position=POS(0,0), Size=SIZE(640,480), DrawBackgroundColor=FALSE, Layer=2}
	bgframe:AttachResource(wm.GetResource("black_transparent_50"))
	wm.ActivateWindow(bgframe)
	
	menu_multiplayer_lobby.items = {
		{ L"0%", function() HideUpgrades(SessionInfo.CarUpgrades.None) end, ICON(menu_multiplayer_lobby, "icon_upgrade_0") },
		{ L"50%", function() HideUpgrades(SessionInfo.CarUpgrades.Half) end, ICON(menu_multiplayer_lobby, "icon_upgrade_50") },
		{ L"100%", function() HideUpgrades(SessionInfo.CarUpgrades.All) end, ICON(menu_multiplayer_lobby, "icon_upgrade_100") },
	}
	
	GUI:HideMenuButtons()
	GUI:InitMenuButtons(menu_multiplayer_lobby.items)
	GUI:SetActiveItem(Session:GetLocalPlayer(1).UpgradeLevel + 1)
	GUI:ShowMenuButtons()
	
	menu_multiplayer_lobby.back2 = menu_multiplayer_lobby.back
	menu_multiplayer_lobby.back = function(self)
		menu_multiplayer_lobby.back = menu_multiplayer_lobby.back2
		menu_multiplayer_lobby.back2 = nil
		wm.RemoveWindow(bgframe)
		BuildLobbyMenuButtons()
		Mode = LOBBY
	end	
end

local function MutePlayer(playerNum)
	local localVoicePlayer = Session:GetLocalPlayer(1):GetVoiceManagerPlayer()
	local player = Session:GetPlayer(playerNum)
	localVoicePlayer:SetPlayerMuted(player.UId, true)
	Mode = LOBBY
	menu_multiplayer_lobby.back = menu_multiplayer_lobby.back2
	menu_multiplayer_lobby.back2 = nil
	BuildLobbyMenuButtons()
end

local function UnMutePlayer(playerNum)
	local localVoicePlayer = Session:GetLocalPlayer(1):GetVoiceManagerPlayer()
	local player = Session:GetPlayer(playerNum)
	localVoicePlayer:SetPlayerMuted(player.UId, false)
	Mode = LOBBY
	menu_multiplayer_lobby.back = menu_multiplayer_lobby.back2
	menu_multiplayer_lobby.back2 = nil
	BuildLobbyMenuButtons()
end

local function StartKickVote(playerNum)
	GUI:HideMenuButtons()
	local player = Session:GetPlayer(playerNum)
	local msg =	WStringConcat(player.Name, L"\n")
	msg = WStringConcat(msg, MULTIPLAYER_LOBBY_KICK)

	MessageBox(
		msg,
		MESSAGEBOX_YESNO,
		function(value)
			if value == TRUE then
				Session:StartKickVote(player.UId)
				Session:GetLocalPlayer(1).Vote = ReplicatedPlayer.VOTE_YES
			end
			Mode = LOBBY
			BuildLobbyMenuButtons()
		end
	)
end

local function ShowPlayerProfile(playerNum)
	OptionsPopup.Create()
	EnterMultiPlayerProfile(Session:GetPlayer(playerNum).Name, Session:GetPlayer(playerNum).UId, function() OptionsPopup.Destroy(); end)
end

local SelectPlayer

local function ShowPlayerOptions(playerNum)
	local player = Session:GetPlayer(playerNum)
	menu_multiplayer_lobby.items = { }
	if not (XBOX and MultiplayerMode == MPMODE_LAN) and Session:GetLocalPlayer(1).UId ~= player.UId then
		local localVoicePlayer = Session:GetLocalPlayer(1):GetVoiceManagerPlayer()
		if localVoicePlayer:PlayerIsMuted(player.UId) then
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_PLAYER_UNMUTE, function() UnMutePlayer(playerNum) end, ICON(menu_multiplayer_lobby, "icon_unmute_player") } )
		else
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_PLAYER_MUTE, function() MutePlayer(playerNum) end, ICON(menu_multiplayer_lobby, "icon_mute_player") } )
		end
	end
	if Session:IsHost() and playerNum ~= 1 and not Session:GetInfo().KickVote.VoteInProgress then
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_PLAYER_KICK, function() StartKickVote(playerNum) end, ICON(menu_multiplayer_lobby, "icon_kick_player") } )
	end
	if MultiplayerMode == MPMODE_XBOXLIVE then
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_PLAYER_PROFILE, function() ShowPlayerProfile(playerNum) end, ICON(menu_multiplayer_lobby, "icon_player_profile") } )
	end
	
	GUI:HideMenuButtons()
	GUI:InitMenuButtons(menu_multiplayer_lobby.items)
	GUI:ShowMenuButtons()
	GUI:SetActiveItem(1)
	
	menu_multiplayer_lobby.back2 = menu_multiplayer_lobby.back
	menu_multiplayer_lobby.back = function()
		Mode = SELECT_PLAYER
		menu_multiplayer_lobby.back = menu_multiplayer_lobby.back2
		menu_multiplayer_lobby.back2 = nil
		GUI:HideMenuButtons()
		GUI:SwitchButtonText(nil)
		wm.GetWindow("selectplayer_handler"):SetFocus()
	end	
end

SelectPlayer = function()
	local handler = InputHandler { Name="selectplayer_handler" }
	
	handler.onKeyPressed = function(Self, Character, VirtualKey, ScanCode)
		local list = wm.GetWindow("list")
		if VirtualKey == KeyCodes["BUTTON_START"] then
			Mode = PLAYER_OPTIONS
			ShowPlayerOptions(list:GetSelectedRow())
			playmenusound_action()
		elseif VirtualKey == KeyCodes["BUTTON_SELECT"] then
			Mode = LOBBY
			wm.RemoveWindow(handler)
			BuildLobbyMenuButtons()
			playmenusound_back()
		elseif VirtualKey == KeyCodes["BUTTON_DOWN"] then
			list:MoveNext()
			playmenusound_move()
		elseif VirtualKey == KeyCodes["BUTTON_UP"] then
			if XBOX or list:GetSelectedRow() > 2 then
				list:MovePrev()
			end
			playmenusound_move()
		end
	end
	
	GUI:HideMenuButtons()
	handler:SetFocus()
	Mode = SELECT_PLAYER
	wm.GetWindow("list"):Refresh()
end

local LobbyEventListener
local function LobbyEventListenerFunc(Event)
	if Event.id==EVENT_NETWORK_HOST_MIGRATION_END then
		local player=Session:GetLocalPlayer(1)
		if player.PeerId==Event.arg then
			BuildLobbyMenuButtons()
		end
	elseif Event.id==EVENT_RACE_ABOUT_TO_BEGIN then
		GameFlow.ClearRace()
		CupManager:Clear()
		
		-- Delete session list here?
		
		Session:GetLocalPlayer(1).Ready = false
		if PS2 then
			Session:GetLocalPlayer(1):GetVoiceManagerPlayer():SetMode(ReplicatedVoiceInfo.MODE_INACTIVE)
		end
		local info=Session:GetInfo()
		db.GameFlow.PreRace.Mode=GM_ONLINE_MULTIPLAYER
		local race=info.Races[info.NextRace]
		db.GameFlow.PreRace.Level=race.StageNr
		db.GameFlow.PreRace.Laps=race.LapsOrTimeLimit
		db.GameFlow.PreRace.UploadResults=info.RatedGame
		
		if race.EventType==ReplicatedSession.GAMETYPE_RACE then
			db.GameFlow.PreRace.Rules=GR_RACE
		elseif race.EventType==ReplicatedSession.GAMETYPE_PONGRACE then
			db.GameFlow.PreRace.Rules=GR_PONGRACE		
		elseif race.EventType==ReplicatedSession.GAMETYPE_DERBY_WRECKING then
			db.GameFlow.PreRace.Rules=GR_DERBY
			db.GameFlow.PreRace.DerbyType=DERBY_WRECKING
		elseif race.EventType==ReplicatedSession.GAMETYPE_DERBY_LMS then 
			db.GameFlow.PreRace.Rules=GR_DERBY
			db.GameFlow.PreRace.DerbyType=DERBY_LMS
		elseif race.EventType==ReplicatedSession.GAMETYPE_DERBY_FRAG then
			db.GameFlow.PreRace.Rules=GR_DERBY
			db.GameFlow.PreRace.DerbyType=DERBY_FRAG
		elseif race.EventType==ReplicatedSession.GAMETYPE_HUNTER_PREY then
			db.GameFlow.PreRace.Rules=GR_HUNTER_PREY
			db.GameFlow.PreRace.NumHunters=race.NumHunters
		elseif race.EventType==ReplicatedSession.GAMETYPE_STUNT then
			db.GameFlow.PreRace.Rules=GR_STUNT
		else
			db.GameFlow.PreRace.Rules=GR_DEFAULT
		end		
		
		db.GameFlow.PreRace.NumPlayers=Session:GetNumPlayers()
		for i=1, Session:GetNumPlayers() do
			local player=Session:GetPlayer(i)
			local tableName=string.format("GameFlow.PlayerInfo[%d]", i-1)
			local table=db:GetTable(tableName)
			table.Name=player.Name
			table.Car=player.Car
			table.CarSkin=player.CarSkin
			table.PeerId=player.PeerId
			table.NetworkId=player:GetId()
			table.Primary=player.Primary
			if player:IsLocal() then
				table.Type=PLAYERTYPE_LOCAL
			else 
				table.Type=PLAYERTYPE_REMOTE
			end
		end
		
		db.GameFlow.PostRace.Result=RESULT_NONE
	end
end

local function ExitLobby()
	--No voice for xbox system link
	if not (MultiplayerMode == MPMODE_LAN and XBOX) then
		Session:GetLocalPlayer(1):GetVoiceManagerPlayer():SetMode(ReplicatedVoiceInfo.MODE_INACTIVE)
	end

	if Session then
		Session:Disconnect()
		for i=1, Session:GetNumLocalPlayers() do
			Session:GetLocalPlayer(i).Ready = false
		end
	end
	
	EnterMenu(menu_multiplayer_lobby.backmenu)
end

local function ConfirmExit()
	MessageBox(MULTIPLAYER_LOBBY_QUITGAME, MESSAGEBOX_YESNO, function(value) if value == TRUE then ExitLobby() end end)
end

local function UpdateGameInfo(self)
	local sessionInfo = Session:GetInfo()	
	local nextRace = sessionInfo.NextRace
	local race = sessionInfo.Races[nextRace]
	local msg = Levels[race.StageNr].Name
	if race.EventType ~= ReplicatedSession.GAMETYPE_STUNT and race.EventType ~= ReplicatedSession.GAMETYPE_DERBY_LMS then
		msg = msg..", "..race.LapsOrTimeLimit
		if race.EventType == ReplicatedSession.GAMETYPE_RACE then
			msg = msg.." LAPS"
		else
			msg = msg.." MINUTES"
		end
	end

	local ressize = wm.GetResourceSize(self:getResource("upshop_top_n_bottom_infotxt_bar_ang"))
	wm.GetWindow("trackname"):SetTitle(L(msg))
	local w,h = wm.GetTextExtents(wm.GetWindow("trackname"):GetTitle(), fontlarge())
	w = w + TITLESAFE_X
	if 640 - w > Layout.TrackFramePos[1] then
		w = 640 - Layout.TrackFramePos[1]
	end
	wm.GetWindow("tracknamebg_cap"):SetPosition(640 - w, Layout.TrackFramePos[2])
	wm.GetWindow("tracknamebg"):SetPosition(640 - w + ressize[1], Layout.TrackFramePos[2])
	local namex = 640 - w + (Layout.TrackNamePos[1] - Layout.TrackFramePos[1])
	wm.GetWindow("trackname"):SetPosition(namex, Layout.TrackNamePos[2])
	wm.GetWindow("gametype"):SetPosition(namex, Layout.GameTypePos[2])
	
	if Session:GetNumRaces() == 0 then
		wm.GetWindow("gametype"):SetTitle(MULTIPLAYER_CHANGINGCAR)
	elseif Session:GetNumRaces() == 1 then
		wm.GetWindow("gametype"):SetTitle(GameModeNames[race.EventType])
	else
		local t1=GameModeNames[race.EventType]
		local t2=WStringConcat(L" (", MULTIPLAYER_EVENT)
		t2 = WStringConcat(t2, L(" "..sessionInfo.NextRace.."/"..Session:GetNumRaces()..")"))
		wm.GetWindow("gametype"):SetTitle(WStringConcat(t1, t2))
	end
end

menu_multiplayer_lobby = CreateMenuFromTemplate("template_multiplayer")
menu_multiplayer_lobby.options.title = TITLE_LIVE_LOBBY
menu_multiplayer_lobby.back = function() ConfirmExit() end

BuildLobbyMenuButtons = function()
	if OptionsPopup.PopupActive then
		return
	end
	
	menu_multiplayer_lobby.items = { }
	
	local commonitems = { }
	if Session:GetInfo().CarClass < 5 then
		table.insert(commonitems, { ICON_MULTIPLAYER_CHANGECAR, function() ChangeCar() end, ICON(menu_multiplayer_lobby,"icon_change_car") } )
	end
	if Session:GetInfo().CarUpgrades == SessionInfo.CarUpgrades.Any then
		table.insert(commonitems, { ICON_MULTIPLAYER_CHANGEUPGRADE, function() ChangeUpgrades() end, ICON(menu_multiplayer_lobby,"icon_change_upgrade_level") } )
	end
	-- Player profile is only available on XBOX, so there are no player details that a player can activate on other platforms
	if XBOX or (Session:IsHost() and Session:GetNumPlayers() > 1) then
		table.insert(commonitems, { ICON_MULTIPLAYER_PLAYERDETAILS, function() SelectPlayer() end, ICON(menu_multiplayer_lobby,"icon_player_details") } )
	end
	
	if Session:IsHost() then
		menu_multiplayer_lobby.items = commonitems
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_GAMEOPTIONS, function() ChangeOptions() end, ICON(menu_multiplayer_lobby,"icon_game_options") } )
		if Session:GetNumRaces() == 1 then
			table.insert(menu_multiplayer_lobby.items, { L"CHANGE TRACK", function() ChangeTrack() end, ICON(menu_multiplayer_lobby,"icon_change_track") } )
		elseif Session:GetInfo().NextRace == 1 then
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_BUILDTOURNAMENT, function() BuildTournament() end, ICON(menu_multiplayer_lobby,"icon_new_tournament") } )
		end
		if Session:GetNumRaces() > 1 then
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_VIEWQUEUE, entermenu("menu_multiplayer_view_tournament"), ICON(menu_multiplayer_lobby,"icon_event_queue") } )
			if Session:GetInfo().NextRace > 1 then
				table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_VIEWRANKING, entermenu("menu_multiplayer_tournament_standings"), ICON(menu_multiplayer_lobby,"icon_rankings") } )
			end
		end
		if Session:GetNumPlayers() > 1 then
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_STARTRACE, function() StartRace() end, ICON(menu_multiplayer_lobby,"icon_go_race") } )
		else
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_STARTRACE, function() end, ICON(menu_multiplayer_lobby,"icon_go_race_grayed") } )
		end
	elseif not Session:GetLocalPlayer(1).Ready then
		menu_multiplayer_lobby.items = commonitems
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_SESSIONDETAILS, function() SessionDetails() end, ICON(menu_multiplayer_lobby,"icon_session_details") } )
		if Session:GetNumRaces() > 1 then
			table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_VIEWQUEUE, entermenu("menu_multiplayer_view_tournament"), ICON(menu_multiplayer_lobby,"icon_event_queue") } )
			if Session:GetInfo().NextRace > 1 then
				table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_VIEWRANKING, entermenu("menu_multiplayer_tournament_standings"), ICON(menu_multiplayer_lobby,"icon_rankings") } )
			end
		end
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_READY, function() ToggleReady() end, ICON(menu_multiplayer_lobby,"icon_ready") } )
	else
		table.insert(menu_multiplayer_lobby.items, { ICON_MULTIPLAYER_UNREADY, function() ToggleReady() end, ICON(menu_multiplayer_lobby,"icon_unready") } )	
	end

	GUI:InitMenuButtons(menu_multiplayer_lobby.items)
	GUI:ShowMenuButtons()
	GUI:SetActiveItem(1)
end

function menu_multiplayer_lobby.create(self)
	self.parent:create(self)

	self:addResource("flags.tga", flags, flags_size)
	self:addResource("garage_elements1.tga", garage_elements1, garage_elements1_size)

	self:loadResources()
	
	BuildLobbyMenuButtons()
end

function menu_multiplayer_lobby.init(self)
	self.parent:init(self)

	Mode = LOBBY
	Network:StopSearchSessions()
	
	GUI:SetBackground("data/menu/menu_background.tga")
	
	-- No voice for xbox systemlink
	if not (MultiplayerMode == MPMODE_LAN and XBOX) then
		Session:GetLocalPlayer(1):GetVoiceManagerPlayer():SetMode(ReplicatedVoiceInfo.MODE_VOICE_CHAT)
	end
	LobbyEventListener=Event:AddListener(LobbyEventListenerFunc, EVENTTYPE_ALL)

	Session:RefreshPoints()

	local res = self:getResource("upshop_top_n_bottom_infotxt_bar_ang")
	local ressize = wm.GetResourceSize(res)
	Frame { Name="tracknamebg_cap", Position=Layout.TrackFramePos, Size=ressize, Layer=2 }:AttachResource(res)
	res = self:getResource("upshop_top_n_bottom_infotxt_bar")
	Frame { Name="tracknamebg", Position=POS(Layout.TrackFramePos[1] + ressize[1], Layout.TrackFramePos[2]), Size=SIZE(300,32), Layer=2 }:AttachResource(res)

	local gametype = StaticText { Name="gametype", Font=fontmedium(), Color=Layout.GameTypeColor, Position=Layout.GameTypePos, Size=SIZE(560, 12), Layer=2 }
	local trackname = StaticText { Name="trackname", Font=fontlarge(), Color=Layout.TrackNameColor, Position=Layout.TrackNamePos, Size=SIZE(560, 12), Layer=2 }
	trackname:SetTitle(L"")
	gametype:SetTitle(L"")
	
	local msg = StaticText { Name="msg", Position=POS(320,315), Size=SIZE(640,41), Font=fontlarge(), Color=GetPaletteColor(1), TitleCentering=TITLECENTER_Y, Align=FONTF_CENTER, Layer=2 }
	msg:SetColor(GetPaletteColor(6),false)
	
	local labelTemplate={
		Font=Layout.LabelFont,
		Position=POS(0, Layout.LabelTop), 
		Size=SIZE(Layout.LabelWidth, Layout.LabelHeight),
		ShowBorders=FALSE,
		TitleCentering=TITLE_CENTER_Y,
		Layer=2,
	}

	labelTemplate.Title=MULTIPLAYER_NAME
	labelTemplate.Position=POS(Layout.NameLeft, Layout.LabelTop)
	StaticText(labelTemplate):SetColor(Layout.LabelColor, false)

	local iconsize = wm.GetResourceSize(wm.GetResource("car_icon"))
	labelTemplate.Position = POS(Layout.CarCenter - iconsize[1] / 2, Layout.LabelTop)
	labelTemplate.Size = iconsize
	Frame(labelTemplate):AttachResource(wm.GetResource("car_icon"))

	local iconsize = wm.GetResourceSize(wm.GetResource("upgrade_icon"))
	labelTemplate.Size = iconsize
	labelTemplate.Position = POS(Layout.UpgradesCenter - iconsize[1] / 2, Layout.LabelTop)
	Frame(labelTemplate):AttachResource(wm.GetResource("upgrade_icon"))

	if MultiplayerMode == MPMODE_XBOXLIVE and Session:GetInfo().RatedGame then
		iconsize = wm.GetResourceSize(wm.GetResource("ranking_points_icon"))
		labelTemplate.Title = MULTIPLAYER_POINTS
		labelTemplate.Name = "scorelabel"
		labelTemplate.Position = POS(Layout.ScoreCenter - iconsize[1] / 2, Layout.LabelTop)
		Frame(labelTemplate):AttachResource(wm.GetResource("ranking_points_icon"))
	
		iconsize = wm.GetResourceSize(wm.GetResource("ranking_races_icon"))
		labelTemplate.Title=MULTIPLAYER_RANK
		labelTemplate.Name="ranklabel"
		labelTemplate.Position=POS(Layout.ScoreCenter - iconsize[1] / 2, Layout.LabelTop)
		Frame(labelTemplate):AttachResource(wm.GetResource("ranking_races_icon"))
	end

	local upgradebgsize = wm.GetResourceSize("upgrade_backdrop")
	
	local listboxParams={
		ListBoxTemplate={Name="list", ShowBorders=FALSE, Layer=2},
		Left=Layout.ListLeft,
		Top=Layout.ListTop,
		LeftPadding=0,
		RightPadding=0,
		TopPadding=0,
		BottomPadding=0,
		RowWidth=640,
		RowHeight=Layout.RowHeight,
		RowPadding=Layout.RowPadding,
		RowTemplate={Font=Layout.ListFont, DrawBackgroundColor=FALSE, TitleCentering=TITLE_CENTER_NONE, Layer=2},
		RowTemplateType="Button",
		RowTemplateCust=function(Row, RowNr)
			Row:SetColor(Layout.ListFontColor, false)
			Row:AttachResource(wm.GetResource("narrow_black_bar_50"))
		end,
		NumRows=8,
		Coloumns={
			[1]={
			Name="readyicon", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.ReadyLeft, Layout.ReadyTop), Size=wm.GetResourceSize("check_mark"), Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
			end
			},
			
			[2]={
			Name="voiceicon", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.VoiceLeft, Layout.VoiceTop), Size=wm.GetResourceSize("xbox_voice_communicator"), Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
			end
			},
			
			[3]={
			Name="flagicon", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.FlagLeft, Layout.FlagTop), Size=wm.GetResourceSize(self:getResource("bugbear")), Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
			end
			},
					
			[4]={
			Name="playername", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.NameLeft, 0), Size=SIZE(Layout.LabelWidth, Layout.RowHeight), Font=Layout.ListFont, Layer=2},
			ColoumnTemplateType="StaticText",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:SetColor(Layout.ListFontColor, false)
			end
			},		

			[5]={
			Name="car", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.CarCenter, 0), Size=SIZE(Layout.LabelWidth, Layout.RowHeight), Font=Layout.ListFont, Align=FONTF_CENTER, Layer=2},
			ColoumnTemplateType="StaticText",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:SetColor(Layout.ListFontColor, false)
			end
			},
			
			[6]={
			Name="upgradesbg", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.UpgradesCenter - upgradebgsize[1] / 2, Layout.UpgradesTop), Size=upgradebgsize, Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:AttachResource(wm.GetResource("upgrade_backdrop"))
			end
			},	
				
			[7]={
			Name="upgrades", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.UpgradesCenter - upgradebgsize[1] / 2 + 2, Layout.UpgradesTop), Size=wm.GetResourceSize("upgrade_glow_full"), Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
			end
			},	

			[8]={
			Name="score", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.ScoreCenter, 0), Size=SIZE(Layout.LabelWidth, Layout.LabelHeight), Font=Layout.ListFont, Align=FONTF_CENTER, Layer=2},
			ColoumnTemplateType="StaticText",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:SetColor(Layout.ListFontColor, false)
			end
			},	
				
			[9]={
			Name="rankbg", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.ScoreCenter - wm.GetResourceSize("rank_value_bottom")[1] / 2, 0), Size=wm.GetResourceSize("rank_value_bottom"), Layer=2},
			ColoumnTemplateType="Frame",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:AttachResource(wm.GetResource("rank_value_bottom"))
			end
			},

			[10]={
			Name="rank", -- _row# is added
			ColoumnTemplate={Position=POS(Layout.ScoreCenter, 1), Size=SIZE(Layout.LabelWidth, Layout.LabelHeight), Font=Layout.RankFont, Align=FONTF_CENTER, Layer=2},
			ColoumnTemplateType="StaticText",
			ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
				Coloumn:SetColor(Layout.ListFontColor, false)
			end
			},	
		}
	}

	local list=CreateMultiColoumnListBox(listboxParams)
	list.onNeedData=function(Self, RowObject, RowNr, ControlRowNr)
		local player=Session:GetPlayer(RowNr)
		local userId=player.UId
		local headsetConnected=false
		local isTalking=false
		local voiceThroughSpeakers=false
			
		local ready=wm.GetWindow(string.format("readyicon_row%i", RowNr))
		local voice=wm.GetWindow(string.format("voiceicon_row%i", RowNr))
		local flag=wm.GetWindow(string.format("flagicon_row%i", RowNr))
		local name=wm.GetWindow(string.format("playername_row%i", RowNr))
		local car=wm.GetWindow(string.format("car_row%i", RowNr))
		local upgrades=wm.GetWindow(string.format("upgrades_row%i", RowNr))
		local score=wm.GetWindow(string.format("score_row%i", RowNr))
		local rank=wm.GetWindow(string.format("rank_row%i", RowNr))
		local rankbg=wm.GetWindow(string.format("rankbg_row%i", RowNr))
		
		if (Mode == SELECT_PLAYER or Mode == PLAYER_OPTIONS) and RowNr == list:GetSelectedRow() then
			RowObject:AttachResource(wm.GetResource("wide_white_bar_30"))
		else
			RowObject:AttachResource(wm.GetResource("wide_black_bar_50"))
		end
		
		name:SetTitle(player.Name)

		if not player.Valid then
			ready:HideWindow()
			voice:HideWindow()
			rank:HideWindow()
			rankbg:HideWindow()
			car:SetTitle(L"")
		else
			local icon = nil
			if player.Status >= ReplicatedPlayer.STATUS_INGAME_RACING then
				icon = wm.GetResource("steering_wheel")
			elseif RowNr == 1 then
				icon = wm.GetResource("yellow_star")
			elseif player.Ready then
				icon = wm.GetResource("check_mark")
			end
			
			if icon then
				local iconsize = wm.GetResourceSize(icon)
				ready:SetPosition(Layout.ReadyCenterX - iconsize[1] / 2, Layout.ReadyCenterY - iconsize[2] / 2)
				ready:SetSize(iconsize[1], iconsize[2])
				ready:AttachResource(icon)
				ready:ShowWindow()
			else
				ready:HideWindow()
			end

			if not (MultiplayerMode == MPMODE_LAN and XBOX) then
				local voicePlayer = player:GetVoiceManagerPlayer()
				local localVoicePlayer = Session:GetLocalPlayer(1):GetVoiceManagerPlayer()
				local voiceIcon = nil
				if localVoicePlayer:PlayerIsMuted(player.UId) then
					voiceIcon = "xbox_voice_muted"
				elseif voicePlayer and voicePlayer:GetHeadsetConnected() then
					if voicePlayer:IsTalking() then
						voiceIcon = "xbox_talking"
					elseif voicePlayer:GetVoiceThroughSpeakers() then
						voiceIcon = "xbox_voice_tv"
					else
						voiceIcon = "xbox_voice_communicator"
					end
				end
				if voiceIcon then
					voice:AttachResource(wm.GetResource(voiceIcon))
					voice:SetColor(GetPaletteColor(player.PlayerColor), false)
					local iconsize = wm.GetResourceSize(wm.GetResource(voiceIcon))
					voice:SetPosition(Layout.VoiceCenterX - iconsize[1] / 2, Layout.VoiceCenterY - iconsize[2] / 2)
					voice:ShowWindow()
				else
					voice:HideWindow()
				end
			else
				voice:HideWindow()
			end	
			
			if MultiplayerMode == MPMODE_XBOXLIVE then
				local flagNr = XBoxLive.GetCountry(player.UId)
				flag:AttachResource(self:getResource(flagnames[flagNr]))
			end
			
			if player.Status == ReplicatedPlayer.STATUS_CHANGING_CAR then 
				car:SetTitle(MULTIPLAYER_CHANGINGCAR)
				car:SetColor(Layout.CarChangingFontColor, false)
			else
				local cardata = db.FlatOut2.Cars:GetProperty("Car", player.Car)
				car:SetTitle(L(cardata.Name))
				car:SetColor(Layout.ListFontColor, false)
			end
			
			if player.UpgradeLevel == SessionInfo.CarUpgrades.None then
				upgrades:AttachResource(nil)
			elseif player.UpgradeLevel == SessionInfo.CarUpgrades.Half then
				upgrades:SetSize(unpack(wm.GetResourceSize("upgrade_glow_half")))
				upgrades:AttachResource(wm.GetResource("upgrade_glow_half"))
			else
				upgrades:SetSize(unpack(wm.GetResourceSize("upgrade_glow_full")))
				upgrades:AttachResource(wm.GetResource("upgrade_glow_full"))
			end
			
			local sessInfo=Session:GetInfo()
			if sessInfo.RatedGame and XBOX then 
				local type
				if sessInfo.TournamentType < ReplicatedSession.GAMETYPE_RACE then
					type=sessInfo.TournamentType
				elseif sessInfo.TournamentType < ReplicatedSession.GAMETYPE_DERBY_WRECKING then
					type=ReplicatedSession.GAMETYPE_TOURNAMENT_RACE
				else 
					type=ReplicatedSession.GAMETYPE_TOURNAMENT_DERBY
				end
					
				if type==ReplicatedSession.GAMETYPE_TOURNAMENT_RACE then
					score:SetTitle(L(player.RacePoints))
					rank:SetTitle(L(player.RaceLevel))
				elseif type==ReplicatedSession.GAMETYPE_TOURNAMENT_DERBY then
					score:SetTitle(L(player.DerbyPoints))
					rank:SetTitle(L(player.DerbyLevel))
				elseif type==ReplicatedSession.GAMETYPE_STUNT then
					score:SetTitle(L(player.StuntPoints))
					rank:SetTitle(L(player.StuntLevel))
				else
					score:HideWindow()
					rank:HideWindow()
					rankbg:HideWindow()
				end	
				score:ShowWindow()
				rank:ShowWindow()
				rankbg:ShowWindow()
			else
				score:HideWindow()
				rank:HideWindow()		
				rankbg:HideWindow()
			end
		end
	end
	
	list:SetNumRows(0)
	
	local player=Session:GetLocalPlayer(1)
	player.Status=ReplicatedPlayer.STATUS_IN_LOBBY

	Error=false
	LobbyMenuFunction=nil
	CurrentTime=nil
	PrevCanStart=nil
	KickBoxActive=false
	LastKickVoteActive=nil
	PrevNumPlayers=nil
	NameCarTime=0
end

function menu_multiplayer_lobby.deinit(self)
	self.parent:deinit(self)
	
	Event:RemoveListener(LobbyEventListener)
	
	HideThinkingWindow()
end

local msgtimer = nil

function menu_multiplayer_lobby.update(self, time)
	self.parent:update(self, time)
	
	if menu_multiplayer_lobby.error then
		return
	end
	
	-- TODO: If player details is active and the selected player leaves the game, go back to player selection
	local info = Session:GetInfo()

	if Session:GetLocalPlayer(1).Kicked and not KickBoxActive then
		KickBoxActive = true
		GUI:HideMenuButtons()
		MessageBox(MULTIPLAYER_LOBBY_KICKMESSAGE, MESSAGEBOX_OK, function(value) EnterMenu(menu_multiplayer_lobby.backmenu) end)
	else	
		if info.KickVote.VoteInProgress and info.KickVote.PlayerToBeKicked ~= Session:GetLocalPlayer(1).UId and not Session:IsHost() and not KickBoxActive and Session:GetLocalPlayer(1).Vote == ReplicatedPlayer.VOTE_NOTVOTED then
			KickBoxActive = true
			local localuid = Session:GetLocalPlayer(1).UId
			for i = 1, info.KickVote.KickVoters:Size() do
				if localuid == info.KickVote.KickVoters[i] then
					local playername = Session:GetPlayerById(info.KickVote.PlayerToBeKicked).Name
					local hostname = Session:GetPlayer(1).Name
					local msg = WStringConcat(hostname, MULTIPLAYER_LOBBY_KICK_RESPONSE1)
					msg = WStringConcat(msg, L" ")
					msg = WStringConcat(msg, playername)
					msg = WStringConcat(msg, L". ")
					msg = WStringConcat(msg, MULTIPLAYER_LOBBY_KICK_RESPONSE2)
					msg = WStringConcat(msg, L" ")
					msg = WStringConcat(msg, playername)
					msg = WStringConcat(msg, L" ")
					msg = WStringConcat(msg, MULTIPLAYER_LOBBY_KICK_RESPONSE3)

					MessageBox(
						msg,
						MESSAGEBOX_YESNO,
						function(value)
							if Session:GetInfo().KickVote.VoteInProgress then
								if value == TRUE then
									Session:GetLocalPlayer(1).Vote = ReplicatedPlayer.VOTE_YES
								else
									Session:GetLocalPlayer(1).Vote = ReplicatedPlayer.VOTE_NO
								end
							end
							KickBoxActive = false
						end
					)

					KickBoxActive = true
					break
				end
			end
		elseif LastKickVoteActive == true and info.KickVote.VoteInProgress == false then
			if KickBoxActive then
				GUI:CloseMessageBox()
				KickBoxActive = false
			end
			Session:GetLocalPlayer(1).Vote = ReplicatedPlayer.VOTE_NOTVOTED

			msgtimer = time
			local msgwin = wm.GetWindow("msg")
			local msgtext
			if info.KickVote.VotePassed then
				msgtext = WStringConcat(info.KickVote.KickedPlayerName, L" ")
				msgtext = WStringConcat(msgtext, MULTIPLAYER_LOBBY_KICK_SUCCESS)
			else
				msgtext = MULTIPLAYER_LOBBY_KICK_FAILED
			end
			msgwin:SetTitle(msgtext)
			msgwin:SetColor(GetPaletteColor(1), false)
			msgwin:ShowWindow()
		end
	end

	LastKickVoteActive = info.KickVote.VoteInProgress
	
	if Session:IsHost() and not info.Races[info.NextRace].Raced and db.GameFlow.PostRace.Result ~= RESULT_NONE then
		info.Races[info.NextRace].Raced = true
		info.NextRace = info.NextRace + 1
		--TODO proper wrapping when tournament ends
		if info.NextRace > info.Races:Size() then
			info.NextRace=1
			for i=1, info.Races:Size() do
				info.Races[i].Raced=false
			end
			if info.RatedGame then
				info.RatedGame = false
			end
		end
		--TODO fill the results
		db.GameFlow.PostRace.Result = RESULT_NONE
		--BuildLobbyMenuButtons()
	end
	
	--[[ TODO: Test this when ranked games work again
	if (info.RatedGame == false or (info.NextRace == info.Races:Size() and db.GameFlow.PostRace.Result ~= RESULT_NONE)) and Session:WasRated() == true then
		ShowMessageBox(nil, nil,
			L"#33#This game is now unranked.\n\n#34#Would you like to continue in this session or find and join a new ranked game session?",
			L"Continue",
			function()end,
			nil,
			nil,
			L"Find ranked games",
			function()
				local backmenu
				if XBOX then
					backmenu = "menu_xboxlive"
				else
					backmenu = "menu_multiplayer_gamespy"
				end
				menu_multiplayer_optimatchresults.backmenu = backmenu
				EnterMenu("menu_multiplayer_optimatchresults")
			end
		)
	end--]]
	
	SetNumRows(Session:GetNumPlayers())
	UpdateGameInfo(self)

	-- Don't show "Host changed..." during first two seconds in lobby
	if ChangeOptionsWaitTime == nil then
		ChangeOptionsWaitTime = time + 2
	end
	
	if Session:HasSessionChanged() then
		local info = Session:GetInfo()
		local player = Session:GetLocalPlayer(1)
		
		if not Session:IsHost() and time > ChangeOptionsWaitTime then
			msgtimer = time

			local msg = wm.GetWindow("msg")
			msg:SetTitle(MULTIPLAYER_HOSTCHANGEOPTIONS)
			msg:SetColor(GetPaletteColor(33), false)
			msg:ShowWindow()

			if Session:GetLocalPlayer(1).Ready == true then
				Session:GetLocalPlayer(1).Ready = false
				if Mode == LOBBY then
					BuildLobbyMenuButtons()
				end
			end
		end
		
		if info.CarClass > 4 then
			player.Car = info.CarClass - 5
		else
			local cars = nil
			if info.CarClass == SessionInfo.CarClass.Stunt then
				cars = CarlistStuntCars()
			elseif info.CarClass ~= SessionInfo.CarClass.Any then
				cars = CarlistFromClass(info.CarClass, false, true)
			end
			if cars then
				local carvalid = false
				for k,car in pairs(cars) do
					if car.index == player.Car then
						carvalid = true
						break
					end
				end
				if not carvalid then
					player.Car = cars[1].index
				end
			end
		end
		
		if info.CarUpgrades ~= SessionInfo.CarUpgrades.Any then
			player.UpgradeLevel = info.CarUpgrades
		end
	end

	if Session:IsHost() then
		local canstart = false
		local setbuttons
		if XBOX then
			setbuttons = false
		elseif PrevNumPlayers == 1 and Session:GetNumPlayers() > 1 then
			setbuttons = true
		end
		PrevNumPlayers = Session:GetNumPlayers()
		
		if Session:GetNumPlayers() > 1 then
			for i = 2, Session:GetNumPlayers() do
				if Session:GetPlayer(i).Ready then
					canstart = true
				end
			end
		end
		
		if PrevCanStart == nil then
			PrevCanStart = canstart
		end
		
		if canstart ~= PrevCanStart then
			PrevCanStart = canstart
--			BuildLobbyMenuButtons()
			setbuttons = true
		end
		if setbuttons and Mode == LOBBY then
			BuildLobbyMenuButtons()
		end
	end
		
	if msgtimer then
--		local d = math.mod(time-msgtimer, 0.25)
		local d = math.mod(time-msgtimer, 1.0)
		local color=GetPaletteColor(33)
--		color[4] = color[4] * math.sin(4*d*3.141592)
		color[4] = color[4] * math.floor(d + 0.5)
		local msg = wm.GetWindow("msg")
		msg:SetColor(color, false)

		if time - msgtimer > 5.25 then
			msgtimer = nil
			msg:HideWindow()
		end
	end
	
	if MultiplayerMode == MPMODE_XBOXLIVE and info.RatedGame then
		local dt=0
		if CurrentTime==nil then
			CurrentTime=time
		else
			dt=time-CurrentTime
			CurrentTime=time
		end
		
		--Slow down time when entering the lobby
		if NameCarTime < 1 then
			NameCarTime=NameCarTime+0.5*dt
		else
			NameCarTime=NameCarTime+dt
		end		
		
		local stateTime=5000
		local fadeTime=NameCarTime*1000
		local PI=3.14
		fadeTime = stateTime * 4 - math.mod(fadeTime, stateTime * 4)
		local alpha1
		local alpha2
		if fadeTime < stateTime then
			alpha1 = 1
			alpha2 = 0
		elseif fadeTime >= stateTime and fadeTime<stateTime*2 then
			alpha1 = 0.5 + 0.5*math.cos( (fadeTime-stateTime) * (PI/stateTime) )
			alpha2 = 0.5 + 0.5*math.cos( PI + (fadeTime-stateTime) * PI/stateTime )
		elseif fadeTime >= stateTime*2 and fadeTime<stateTime*3 then
			alpha1 = 0
			alpha2 = 1
		else
			alpha1 = 0.5 + 0.5*math.cos( PI + (fadeTime-3*stateTime) * PI/stateTime )
			alpha2 = 0.5 + 0.5*math.cos( (fadeTime-3*stateTime) * (PI/stateTime) )
		end
		alpha1=alpha1*MAX_VERTEXCOLOR_A
		alpha2=alpha2*MAX_VERTEXCOLOR_A
		
		local white = GetPaletteColor(1)
		local color = { white[1], white[2], white[3], alpha1 }
		wm.GetWindow("scorelabel"):SetColor(color, false)
		color[4]=alpha2
		wm.GetWindow("ranklabel"):SetColor(color, false)
		
		local scorecolor = { Layout.ListFontColor[1], Layout.ListFontColor[2], Layout.ListFontColor[3], alpha1 }
		local rankbgcolor = { white[1], white[2], white[3], alpha2 }
		local rankcolor = { Layout.RankColor[1], Layout.RankColor[2], Layout.RankColor[3], alpha2 }
		for i=1, 8 do
			wm.GetWindow(string.format("score_row%i", i)):SetColor(scorecolor, false)
			wm.GetWindow(string.format("rankbg_row%i", i)):SetColor(rankbgcolor, false)
			wm.GetWindow(string.format("rank_row%i", i)):SetColor(rankcolor, false)
		end
	end
end
