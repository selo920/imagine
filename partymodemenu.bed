--///////////////////////////////////////////////////////////////////////////
--// PartyModeMenu.bed
--///////////////////////////////////////////////////////////////////////////
--// Copyright (c) 2005 Bugbear Entertainment ltd. 
--// All Rights Reserved.
--// 
--// Created on 7.11.2005 11:23:29
--// 
--// @Author Mikko Sivulainen (mikko.sivulainen@bugbear.fi)
--///////////////////////////////////////////////////////////////////////////


local state
local tracks

local SplitScreen

local trackfiles = {
		[TRACKTYPE_STUNT] = { "single_player_track_images25", "single_player_track_images26", "single_player_track_images27",
						  "single_player_track_images28", "single_player_track_images29", "single_player_track_images30", },
}

local stunt_goals = {
	[STUNT_CURLING] = TRACK_DESCRIPTION_CURLING_GOAL,
	[STUNT_HIGHJUMP] = TRACK_DESCRIPTION_HIGHJUMP_GOAL,
	[STUNT_STONESKIPPING] = TRACK_DESCRIPTION_STONESKIPPING_GOAL,
	[STUNT_RINGOFFIRE] = TRACK_DESCRIPTION_RINGOFFIRE_GOAL,
	[STUNT_DARTS] = TRACK_DESCRIPTION_DARTS_GOAL,
	[STUNT_BLACKDANNY] = TRACK_DESCRIPTION_ROYALFLUSH_GOAL,
	[STUNT_SKIJUMP] = TRACK_DESCRIPTION_SKIJUMP_GOAL,
	[STUNT_FIELDGOAL] = TRACK_DESCRIPTION_FIELDGOAL_GOAL,
	[STUNT_BOWLING] = TRACK_DESCRIPTION_BOWLING_GOAL,
	[STUNT_BASKETBALL] = TRACK_DESCRIPTION_BASKETBALL_GOAL,
	[STUNT_BASEBALL] = TRACK_DESCRIPTION_BASEBALL_GOAL,
	[STUNT_SOCCER] = TRACK_DESCRIPTION_SOCCER_GOAL,
}


function EnterPartyModeMenu(splitscreen)
	SplitScreen = splitscreen
	EnterMenu("menu_partymode")
end

menu_partymode = CreateMenuFromTemplate("template_basic")
menu_partymode.options.title=TRANSLATOR(TITLE_PARTYMODE)
menu_partymode.back = function() state=nil; EnterMenu("menu_mainmenu") end


local remove_player
local add_player
local go_race
local start_removeplayer

local function start_splitscreen()

	GameFlow.ClearRace()

	for i=1,state.num_players do
		local playerinfo=db.GameFlow[string.format("PlayerInfo[%d]",i-1)]


		playerinfo.Name=state.players[i].name
		playerinfo.Car=state.players[i].car
		playerinfo.CarSkin=1
		playerinfo.Type=PLAYERTYPE_LOCAL
		playerinfo.CharType=0
		playerinfo.Controller=i-1

		db.GameFlow.PreRace.Mode=GM_SPLITSCREEN
		db.GameFlow.PreRace.CupChoice=0
		
		Event:PostEvent(event(EVENT_RACE_BEGIN))
	end
end

local function set_buttons()
	menu_partymode.items={}

	if state.num_players == 0 then
		menu_partymode.items[1]=MENUITEM(TRANSLATOR(ICON_PARTY_ADDPLAYER),add_player,ICON(menu_partymode,"icon_add_player"))
		menu_partymode.items[2]=MENUITEM(TRANSLATOR(ICON_PARTY_REMOVEPLAYER),disabled(),ICON(menu_partymode,"icon_remove_player_grayed"))
		menu_partymode.items[3]=MENUITEM(TRANSLATOR(ICON_PARTY_GORACE),disabled(),ICON(menu_partymode,"icon_go_race_grayed"))
	elseif state.num_players == 8 or (SplitScreen and state.num_players == 2) then
		menu_partymode.items[1]=MENUITEM(TRANSLATOR(ICON_PARTY_ADDPLAYER),disabled(),ICON(menu_partymode,"icon_add_player_grayed"))
		menu_partymode.items[2]=MENUITEM(TRANSLATOR(ICON_PARTY_REMOVEPLAYER),start_removeplayer,ICON(menu_partymode,"icon_remove_player"))
		if SplitScreen then
			menu_partymode.items[3]=MENUITEM(TRANSLATOR(ICON_SPLITSCREEN_GORACE),start_splitscreen,ICON(menu_partymode,"icon_go_race"))
		else
			menu_partymode.items[3]=MENUITEM(TRANSLATOR(ICON_PARTY_GORACE),entermenu("menu_partymode_stuntselect"),ICON(menu_partymode,"icon_go_race"))
		end
	else
		menu_partymode.items[1]=MENUITEM(TRANSLATOR(ICON_PARTY_ADDPLAYER),add_player,ICON(menu_partymode,"icon_add_player"))
		menu_partymode.items[2]=MENUITEM(TRANSLATOR(ICON_PARTY_REMOVEPLAYER),start_removeplayer,ICON(menu_partymode,"icon_remove_player"))
		if SplitScreen then
			menu_partymode.items[3]=MENUITEM(TRANSLATOR(ICON_SPLITSCREEN_GORACE),disabled(),ICON(menu_partymode,"icon_go_race_grayed"))
		else
			menu_partymode.items[3]=MENUITEM(TRANSLATOR(ICON_PARTY_GORACE),entermenu("menu_partymode_stuntselect"),ICON(menu_partymode,"icon_go_race"))
		end
	end

end

local function timer_buttons()
	set_buttons()
	GUI:InitMenuButtons(menu_partymode.items)
	GUI:SetActiveItem(1)
	GUI:ShowMenuButtons()
end


add_player = function()
	state.total_players = state.total_players + 1
	if state.total_players > 99 then
		state.total_players = 1
	end
	state.num_players = state.num_players + 1
	state.players[state.num_players]={}
	state.players[state.num_players].name=ConvertToWString(string.format("PLAYER%d",state.total_players))

	EnterMenu("menu_partymode_addplayer_name")

end


local function SetPlayerBars()
	
	for i=1,8 do
		local prefix=string.format("player%d",i)

		if i > state.num_players then
			W(prefix.."_bar"):SetAlpha(0)
			W(prefix.."_car"):SetAlpha(0)
			W(prefix.."_name"):SetAlpha(0)
		else
			local w=W(prefix.."_bar")
			w:SetAlpha(1)
			w:AttachResource(menu_partymode:getResource("black_transparent_50"))

			w=W(prefix.."_name")
			w:SetAlpha(1)
			w:SetTitle(state.players[i].name)

			w=W(prefix.."_car")
			w:SetAlpha(1)
			w:SetTitle(state.players[i].carname)
		end
	end

end


local function end_removeplayer()

	SetPlayerBars()
	GUI:SetActiveItem(2)
	GUI:ShowMenuButtons()

end



remove_player = function()

--//	table.remove(state.players,state.removedplayer)
	for i=state.removedplayer,state.num_players do
		state.players[i]=state.players[i+1]
	end
	state.players[state.num_players]=nil

	state.removedplayer=nil

	state.num_players = state.num_players - 1

	SetPlayerBars()

	set_buttons()
	GUI:InitMenuButtons(menu_partymode.items)
	GUI:SetActiveItem(1)
	GUI:ShowMenuButtons()




	
end

local function remove_setselected()
	local prefix=string.format("player%d",state.removedplayer)

	SetPlayerBars()
	local w=W(prefix.."_bar")
	w:AttachResource(menu_partymode:getResource("white_transparent"))
	w:SetAlpha(0.3)

end


start_removeplayer = function()
	GUI:HideMenuButtons()
	state.removedplayer=state.num_players
	SetPlayerBars()
	remove_setselected()

	W("inputhandler"):SetFocus()
end



go_race = function()
	GameFlow.ClearRace()

	for i=1,state.num_players do
		local playerinfo=db.GameFlow[string.format("PlayerInfo[%d]",i-1)]

		playerinfo.Name=state.players[i].name
		playerinfo.Car=state.players[i].car
		playerinfo.CarSkin=1
		playerinfo.Type=PLAYERTYPE_LOCAL
		playerinfo.CharType=0

		db.GameFlow.PreRace.Mode=GM_PARTY
		db.GameFlow.PreRace.Level=state.selected_stunt or 72
		
		Event:PostEvent(event(EVENT_RACE_BEGIN))
	end
end


function menu_partymode.create(self)
	self.parent:create(self)


	state=state or {}
	state.total_players=state.total_players or 0
	state.num_players=state.num_players or 0
	state.players = state.players or {}

	self:loadResources()


	set_buttons()


end




function menu_partymode.init(self)
	self.parent:init(self)


	StaticText{Title=TRANSLATOR(TITLE_PLAYERSETUP),Color=GetPaletteColor(3),Position=POS(180,84),Font=fontlarge()}
	
	StaticText{Title=TRANSLATOR(TITLE_NAME),Font=fontsmall(),Position=POS(180,131)}
	StaticText{Title=TRANSLATOR(TITLE_CAR),Font=fontsmall(),Position=POS(400,131)}

	local pos=POS(0,131+22)

	for i=1,8 do
		local prefix=string.format("player%d",i)
		Frame{Name=prefix.."_bar",Position=pos,Size=SIZE(640,20)}:AttachResource(self:getResource("black_transparent_50"))
		StaticText{Name=prefix.."_name",Position=POS(180,pos[2]),Font=fontsmall(),Color=GetPaletteColor(34)}
		StaticText{Name=prefix.."_car",Position=POS(400,pos[2]),Font=fontsmall(),Color=GetPaletteColor(34)}

		pos[2] = pos[2] + 22
	end

	SetPlayerBars()


	local input=InputHandler{Name="inputhandler"}


	input.onKeyPressed = function(self,character,virtualkey,scancode)
		if virtualkey == KeyCodes.BUTTON_UP then
			if state.removedplayer > 1 then
				state.removedplayer = state.removedplayer - 1 
				remove_setselected()
			end
			playmenusound_move()
		elseif virtualkey == KeyCodes.BUTTON_DOWN then
			if state.removedplayer < state.num_players then
				state.removedplayer = state.removedplayer + 1 
				remove_setselected()
			end
			playmenusound_move()
		elseif virtualkey == KeyCodes.BUTTON_SELECT then
			end_removeplayer()
			playmenusound_back()
		elseif virtualkey == KeyCodes.BUTTON_START then
			remove_player()
			playmenusound_action()
		end

	end




	--//GUI:SetBackground("data/menu/canvas_bg.tga")
	GUI:SetBackgroundVideo("data/video/bg_main")
	GUI:SetHelpButtons(BUTTON_OK,TRANSLATOR(UI_SELECT),BUTTON_BACK,TRANSLATOR(UI_BACK))

end


function menu_partymode.deinit(self)
	self.parent:deinit(self)

end



--// ---------------------------------------------------------------------------------------------------------------------------------
--// player name
--// ---------------------------------------------------------------------------------------------------------------------------------

menu_partymode_addplayer_name = CreateMenuFromTemplate("template_basic")


menu_partymode_addplayer_name.options.title=TRANSLATOR(TITLE_PLAYERNAME)

function menu_partymode_addplayer_name.create(self)
	self.parent:create(self)

	self:addResource("keyboard.tga",keyboard,keyboard_size)

	self:loadResources()

end

function menu_partymode_addplayer_name.init(self)
	self.parent:init(self)


	local title=ConvertToWString(string.format("PLAYER %d NAME",state.total_players))

	wm.SetTextInput(state.players[state.num_players].name)

	local keyboard=VirtualKeyboard{Font=fontmedium(),Title=title,TitleFont=fontlarge(),MaxSize=8,
		TitleResources={ self:getResource("keyboard_title_bars_tip"), self:getResource("keyboard_title_bars_main") },
		InputResources={ self:getResource("keyboard_title_bars_tip2"), self:getResource("keyboard_title_bars_main2") },
		KeyboardResources={ self:getResource("keyboard_bg_tip"), self:getResource("keyboard_bg_main")} }

	

	function keyboard.onBack(self)
		state.players[state.num_players]=nil
		state.num_players = state.num_players - 1
		state.total_players = state.total_players - 1
		EnterMenu("menu_partymode")
	end

	function keyboard.onAction(self)
		state.players[state.num_players].name=wm.GetTextInput()	
		EnterMenu("menu_partymode_addplayer_car")
	end

	--//GUI:SetBackground("data/menu/canvas_bg.tga")
	GUI:SetBackgroundVideo("data/video/bg_main")
	GUI:SetHelpButtons(BUTTON_OK,TRANSLATOR(UI_SELECT),BUTTON_BACK,TRANSLATOR(UI_BACK))


end

function menu_partymode_addplayer_name.deinit(self)
	self.parent:deinit(self)

end



--// ---------------------------------------------------------------------------------------------------------------------------------
--// player car
--// ---------------------------------------------------------------------------------------------------------------------------------
function SetCarDescription(car)
	local w=W("car_description")

	local descriptions = {
		[35] = TRANSLATOR(CAR35_DESCRIPTION),
		[36] = TRANSLATOR(CAR36_DESCRIPTION),
		[37] = TRANSLATOR(CAR37_DESCRIPTION),
		[38] = TRANSLATOR(CAR38_DESCRIPTION),
		[39] = TRANSLATOR(CAR39_DESCRIPTION),
		[1000] = TRANSLATOR(TARINA_STUNTCARISTA_NIMELTA_LINDA),
	}

	w:SetTitle(descriptions[car+1])
	w:WordWrap()

end


menu_partymode_addplayer_car = CreateMenuFromTemplate("template_basic")

menu_partymode_addplayer_car.options.title=TRANSLATOR(TITLE_STUNTCARSELECTION)


function menu_partymode_addplayer_car.create(self)
	self.parent:create(self)


	self:addResource("garage_elements1.tga",garage_elements1,garage_elements1_size)
	self:addResource("car_icons.tga",car_icons,car_icons_size)
--//	self:addResource("car_icons_2.tga",car_icons_2,car_icons_2_size)
--//	self:addResource("car_icons_locked.tga",car_icons_locked,car_icons_locked_size)
--//	self:addResource("car_icons_2_locked.tga",car_icons_2_locked,car_icons_2_locked_size)
	self:addResource("car_logos.tga",car_logos,car_logos_size)
	self:addResource("car_logos_2.tga",car_logos_2,car_logos_2_size)
	self:addResource("car_logos_3.tga",car_logos_3,car_logos_3_size)

	self:loadResources()

end

function menu_partymode_addplayer_car.init(self)
	self.parent:init(self)


	Frame{Name="garage_cars_bg",Position=POS(0,335),Size=SIZE(640,64)}:AttachResource(self:getResource("selection_bg"))
	local parent=ButtonBar{ Slots=7,Name="garage_cars",Padding=0,SlotSize=SIZE(107,56),
							SelectedSlotSize=SIZE(107,56),Position=POS(-60,337),Size=SIZE(640+50,60),
							ButtonBackground=self:getResource("selection_window"),
							ButtonSelection=self:getResource("buttonbar_select_glow"),
							}


	parent.onButtonChange = function(self,id)
		state.players[state.num_players].car=menu_partymode_addplayer_car.GarageCars[id].index
		UpdateCarInfo(state.players[state.num_players].car,menu_partymode_addplayer_car)
		SetCarDescription(state.players[state.num_players].car)
	end

	parent.onChildAction = function(self,id)
		state.players[state.num_players].car=menu_partymode_addplayer_car.GarageCars[id].index
		state.players[state.num_players].carname=menu_partymode_addplayer_car.GarageCars[id].name

		EnterMenu("menu_partymode")
	end

	function parent.onBack(self)
		EnterMenu("menu_partymode_addplayer_name")
	end


	Frame{Name="car_logo",Position=POS(592,68),Size=GetResourceSize(self:getResource("car_0_logo"))}:AttachResource(self:getResource("car_0_logo"))
	--//StaticText{Name="car_name",Position=POS(-100,86),Font=fontlarge(),Color=GetPaletteColor(3)}

	local w=StaticText{Name="car_description",Position=POS(70,142),Size=SIZE(200,400),Font=fontsmall()}

	local pos=POS(50,66)

	--//CreateCarInfoWindows(pos,false)

	GUI:SetHelpButtons(BUTTON_OK,TRANSLATOR(UI_SELECT),BUTTON_BACK,TRANSLATOR(UI_BACK))

	local cars={}
	local id,button
	local first
	local i

	local carlist
	if SplitScreen then
		carlist=CarlistAllCars()
	else
		carlist=CarlistStuntCars()
	end

	for i=1,table.getn(carlist) do
		local car=carlist[i]
		if car then
			local iconname

			iconname=string.format("car_%d_icon",GetCarDataIndex(car.index))

			local cardata=db.FlatOut2.Cars:GetProperty("Car",car.index)

			local id,button=parent:AddButton(self:getResource(iconname)) --//ICON(self,iconname))
			table.insert(cars,id,{ index=car.index,name=ConvertToWString(cardata.Name),button=button})
			
			if not first then first=id end
		end
	end
	self.GarageCars=cars

	local cur_car=state.players[state.num_players].car or -1
	if cur_car < 0 then
		cur_car=self.GarageCars[first].index
	end
	state.players[state.num_players].car=cur_car

	UpdateCarInfo(cur_car,self)
	SetCarDescription(1)

	parent:SetSelectedButton(0,FALSE)
	parent:onButtonChange(1)

	GUI:SetBackground("data/menu/stunt_car_selection_bg.tga")

end

function menu_partymode_addplayer_car.deinit(self)
	self.parent:deinit(self)

end

function menu_partymode_addplayer_car.starthide(self)
	self.parent:starthide(self)	

	GUI:HideCar()

end

function menu_partymode_addplayer_car.eventhandler(self,event)
	if event.id == EVENT_MENU_MENUCAR_LOADED then
		GUI:ShowCar()
	end
end



--// ---------------------------------------------------------------------------------------------------------------------------------
--// stunt select
--// ---------------------------------------------------------------------------------------------------------------------------------
local function select_stunt(x,y)

	local w=state.stunts[state.selection.y][state.selection.x]

	w:deactivate()

	state.selection.x=x
	state.selection.y=y

	w=state.stunts[y][x]

	GUI:SwitchButtonText(w.name)
	
	w:activate()

end



menu_partymode_stuntselect = CreateMenuFromTemplate("template_basic")

menu_partymode_stuntselect.options.title=TRANSLATOR(TITLE_SELECTSTUNT)


local function UpdateHighScores()

	hs_title=GameFlow.GetStuntScoreType(Levels[state.selected_stunt].StuntType)

	W("hs_title"):SetTitle(hs_title)

	for i=1,10 do
		local wname=string.format("hs_%d",i)

		if i < table.getn(state.highscores) and state.highscores[i].valid then
			local w=W(wname.."_number")
			w:ShowWindow()
			w:SetTitle(ConvertToWString(string.format("%d.",i)))

			w=W(wname.."_name")
			w:ShowWindow()
			w:SetTitle(state.highscores[i].name)

			w=W(wname.."_score")
			w:ShowWindow()
			w:SetTitle(FormatHighScoreScore(state.highscores[i]))
		else
			W(wname.."_number"):HideWindow()
			W(wname.."_name"):HideWindow()
			W(wname.."_score"):HideWindow()
		end
	end

end




local function SwitchTrackInfo(self,direction,id)

	local leveldata=Levels[tracks[id].level_id]
	local w=W("track_name")
	W("track_name"):SetTitle(ConvertToWString(leveldata.Name))

	if W("lapcount") then
		W("lap_icon"):ShowWindow()
		W("lapcount"):ShowWindow()
		W("lapcount"):SetTitle(ConvertToWString(string.format("%d LAPS",leveldata.Laps or 0)))
	end

	if W("stunt_goal") then
		if W("lap_icon") then W("lap_icon"):HideWindow() end
		if W("lapcount") then W("lapcount"):HideWindow() end

		W("stunt_goal"):ShowWindow()
		W("stunt_goal"):SetTitle(TRANSLATOR(stunt_goals[leveldata.StuntType]))
	end

	W("track_description"):SetTitle(TRANSLATOR(leveldata.Description))
	W("track_description"):WordWrap()

	local icon=leveldata.TrackIcon or ""
	W("track_image"):AttachResource(self:getResource(icon.."_sp"))

	state.highscores=GetLevelHighScores(tracks[id].level_id)

	UpdateHighScores()


end

local function ToggleHighScores()
	if state.show_highscores then
		AnimateWindowPos(W("highscore_windows"),{ W("highscore_windows"):GetPosition() },POS(350,0),0.3)

		AnimateWindowPos(W("info_windows"),{ W("info_windows"):GetPosition() },POS(0,0),0.3,0.3)

		state.show_highscores=nil
		GUI:SetHelpButtons(BUTTON_OK,TRANSLATOR(UI_SELECT),BUTTON_BACK,TRANSLATOR(UI_BACK),BUTTON_INFO,TRANSLATOR(UI_HIGHSCORES))
	else
		AnimateWindowPos(W("info_windows"),{ W("info_windows"):GetPosition() },POS(350,0),0.3)

		AnimateWindowPos(W("highscore_windows"),{ W("highscore_windows"):GetPosition() },POS(0,0),0.3,0.3)

		state.show_highscores=true
		GUI:SetHelpButtons(BUTTON_OK,L"SELECT",BUTTON_BACK,L"BACK",BUTTON_INFO,L"DESCRIPTION")
	end
end




function menu_partymode_stuntselect.create(self)
	self.parent:create(self)

--//	self:addResource("track_icons.tga",track_icons,track_icons_size)
--//	self:addResource("track_icons_2.tga",track_icons_2,track_icons_2_size)
	self:addResource("selection_elements.tga",selection_elements,selection_elements_size)
	self:addResource("cup_final_results_elements1.tga",cup_final_results_elements1,cup_final_results_elements1_size)
	self:addResource("garage_elements1.tga",garage_elements1,garage_elements1_size)

	self:addResource("track_images.tga",track_images,track_images_size)
	self:addResource("track_images2.tga",track_images2,track_images2_size)

	self:addResource("backdrops2.tga",backdrops2,backdrops2_size)
	self:addResource("backdrops3.tga",backdrops3,backdrops3_size)

	local files=trackfiles[TRACKTYPE_STUNT]

	for k,v in ipairs(files) do
		self:addResource(v..".tga",_G[v],_G[v.."_size"])
	end
--//	self:addResource("track_logos.tga",track_logos,track_logos_size)
--//	self:addResource("track_logos2.tga",track_logos2,track_logos2_size)
--//	self:addResource("track_logos3.tga",track_logos3,track_logos3_size)

	self:loadResources()

	if not state then
		state={}
		state.total_players= 0
		state.num_players= 0
		state.players={}

		for i=1,8 do
			local playerinfo=db.GameFlow[string.format("PlayerInfo[%d]",i-1)]

			if playerinfo.Type == PLAYERTYPE_LOCAL then
				state.players[i]={}
				state.players[i].name=playerinfo.Name
				state.players[i].car=playerinfo.Car
				
				local cardata=db.FlatOut2.Cars:GetProperty("Car",state.players[i].car)
				state.players[i].carname=ConvertToWString(cardata.Name)


				state.num_players = state.num_players + 1
				state.total_players = state.total_players + 1
			end
		end
	end

end





function menu_partymode_stuntselect.init(self)
	self.parent:init(self)

	Frame{Name="race_bar_bg",Position=POS(0,335),Size=SIZE(640,64)}:AttachResource(self:getResource("selection_bg"))
	local bar=ButtonBar{ Slots=7,Name="race_bar",Padding=0,SlotSize=SIZE(107,56),
							SelectedSlotSize=SIZE(107,56),Position=POS(-60,337),Size=SIZE(640+50,60),
							ButtonBackground=self:getResource("selection_window"),
							ButtonSelection=self:getResource("buttonbar_select_glow"),
							}

	function bar.onBack(self)
		playmenusound_back()
		--//RaceSelectionState:prevPhase()
		EnterMenu("menu_partymode")
	end

	tracks=GetTracksByType(TRACKTYPE_STUNT) --//kludge_gettracks(track_types[RaceSelectionState.RaceType].name)


--//	Frame{Name="trackmap_1",Position=POS(80,57),Size=SIZE(290,270)}
--//	Frame{Name="trackmap_2",Position=POS(641,57),Size=SIZE(290,270)}

	
--//	Frame{Name="track_logo",Position=POS(400,70),Size=SIZE(160,64)}

	Frame{Position=POS(284,72),Size=SIZE(58,32)}:AttachResource(self:getResource("upshop_top_n_bottom_infotxt_bar_ang"))
	Frame{Position=POS(342,72),Size=SIZE(298,32)}:AttachResource(self:getResource("upshop_top_n_bottom_infotxt_bar"))

	StaticText{Name="track_name",Position=POS(441,79),Align=FONTF_CENTER,Font=fontlarge(),Color=GetPaletteColor(33)}

	local p=Frame{Name="info_windows",Position=POS(0,0),Size=SIZE(640,480)}

	Frame{Position=POS(295,109),Size=SIZE(49,130),Parent=p}:AttachResource(self:getResource("upshop_mid_infotxt_bar_ang"))
	Frame{Position=POS(344,109),Size=SIZE(296,130),Parent=p}:AttachResource(self:getResource("upshop_mid_infotxt_bar"))

	StaticText{Name="track_description",Position=POS(329,120),Size=SIZE(261,110),Font=fontmedium(),Color=GetPaletteColor(34),Parent=p}

	Frame{Position=POS(333,244),Size=SIZE(55,72),Parent=p}:AttachResource(self:getResource("info_box_detailed_tip"))
	Frame{Position=POS(333+55,244),Size=SIZE(252,72),Parent=p}:AttachResource(self:getResource("info_box_detailed_strech"))

	StaticText{Title=TRANSLATOR(HEADER_TRACKINFORMATION),Position=POS(346,251),Font=fontmedium(),Color=GetPaletteColor(33),Parent=p}


	local lap_size=GetResourceSize(self:getResource("lap"))
	local clock_size=GetResourceSize(self:getResource("clock"))
	
	Frame{Name="clock_icon",Position=POS(358,273),Size=clock_size,Parent=p}:AttachResource(self:getResource("clock"))
	--//Frame{Name="lap_icon",Position=POS(358,294),Size=lap_size,Parent=p}:AttachResource(self:getResource("lap"))

	StaticText{Name="highscore",Title=L"0'00'00  MUTSIS",Font=fontsmall(),Position=POS(358+clock_size[1]+4,275),Color=GetPaletteColor(34),Parent=p}
	--//StaticText{Name="lapcount",Title=L"3 LAPS",Font=fontsmall(),Position=POS(358+lap_size[1]+4,295),Color=GetPaletteColor(34),Parent=p}
	StaticText{Name="stunt_goal",Position=POS(358+lap_size[1]+4,294),Font=fontsmall(),Color=GetPaletteColor(33),Parent=p}:HideWindow()
	
	
	--//highscores
	p=Frame{Name="highscore_windows",Position=POS(350,0),Size=SIZE(640,480)}

	StaticText{Title=TRANSLATOR(TITLE_CROSSHATCH),Position=POS(324,111),Fontf=fontmedium(),Align=FONTF_RIGHT,Parent=p,Color=GetPaletteColor(33)}
	StaticText{Title=TRANSLATOR(TITLE_NAME),Position=POS(330,111),Parent=p,Font=fontmedium(),Color=GetPaletteColor(33)}

	local hs_title=TRANSLATOR(TITLE_TIME)

	StaticText{Name="hs_title",Title=hs_title,Position=POS(474,111),Parent=p,Font=fontmedium(),Color=GetPaletteColor(33)}


	Frame{Position=POS(301,129),Size=SIZE(31,92),Parent=p}:AttachResource(self:getResource("sr_highscore_bar_ang"))
	Frame{Position=POS(331,129),Size=SIZE(309,92),Parent=p}:AttachResource(self:getResource("sr_highscore_bar_str"))

	Frame{Position=POS(328,224),Size=SIZE(31,92),Parent=p}:AttachResource(self:getResource("sr_highscore_bar_ang"))
	Frame{Position=POS(358,224),Size=SIZE(282,92),Parent=p}:AttachResource(self:getResource("sr_highscore_bar_str"))

	local hs_pos=POS(329,130)
	for i=1,10 do
		StaticText{Name=string.format("hs_%d_number",i),Position=POS(hs_pos[1],hs_pos[2]-1),Align=FONTF_RIGHT,Font=fontmedium(),Color=GetPaletteColor(34),Parent=p}
		StaticText{Name=string.format("hs_%d_name",i),Position=POS(hs_pos[1]+6,hs_pos[2]-1),Font=fontmedium(),Color=GetPaletteColor(34),Parent=p}
		StaticText{Name=string.format("hs_%d_score",i),Position=POS(hs_pos[1]+150,hs_pos[2]-1),Font=fontmedium(),Color=GetPaletteColor(34),Parent=p}

		hs_pos[1] = hs_pos[1] + 5
		hs_pos[2] = hs_pos[2] + 19
	end

	--//end highscores


	Frame{Position=POS(0,72),Size=SIZE(273,143)}:AttachResource(self:getResource("big_bottom"))
	Frame{Position=POS(273,72),Size=SIZE(45,143)}:AttachResource(self:getResource("big_bottom_ang"))

	Frame{Position=POS(0,215),Size=SIZE(313,101)}:AttachResource(self:getResource("big_bottom_race_sel"))
	Frame{Position=POS(313,215),Size=SIZE(34,101)}:AttachResource(self:getResource("big_bottom_race_sel_ang"))

	Frame{Name="track_image",Position=POS(0,84),Size=SIZE(332,219)}

	bar.onButtonChange = function(self,id)

		playmenusound_move()
		--//db.GameFlow.PreRace.Level=tracks[id].level_id
		state.selected_stunt=tracks[id].level_id

		GUI:SwitchButtonText(tracks[id].name)

		local menu=menu_partymode_stuntselect

		if not old_id then
			SwitchTrackInfo(menu,DIRECTION_NONE,id)
		elseif id > old_id then
			if old_id == 1 and id == table.getn(tracks) then
				SwitchTrackInfo(menu,DIRECTION_NONE,id)
			else
				SwitchTrackInfo(menu,DIRECTION_LEFT,id)
			end
		elseif id < old_id then
			if old_id == table.getn(tracks) and id == 1 then
				SwitchTrackInfo(menu,DIRECTION_NONE,id)
			else
				SwitchTrackInfo(menu,DIRECTION_RIGHT,id)
			end
		end

	end

	bar.onChildAction = function(self,id)
		playmenusound_action()
		go_race()
	end

	bar.onButtonY = function(self,id)
		playmenusound_move()
		ToggleHighScores()
	end


	for k,v in ipairs(tracks) do
		local data=Levels[v.level_id]
		bar:AddButton(self:getResource(data.TrackIcon or ""))
	end

	bar:SetFocus()
	
	bar:onButtonChange(1)
	
	--//GUI:SetBackground("data/menu/menu_background.tga")
	GUI:SetBackgroundVideo("data/video/bg_main")
	GUI:SetHelpButtons(BUTTON_OK,TRANSLATOR(UI_SELECT),BUTTON_BACK,TRANSLATOR(UI_BACK))

end

function menu_partymode_stuntselect.deinit(self)
	self.parent:deinit(self)

end





