
-- Racing: normal racing situation
-- OffTrack: player off track or stopped
-- Airborne: player's ragdoll ejected

--	ThrottleMax: min,max   		maximum throttle values for AI
--	ThrottleRange: min, max		handicap range for throttle reduction
--	ThrottleReduction: 		maximum throttle reduction
--	TurnRange:			handicap range for turn evaluation
--	TurnScale: >= 1.0		scale valued for turns. 2 = double tight
--	TurboRangeAhead:		handicap range for turbo reduction
--	TurboAdjustAhead:		turbo reduction value
--	TurboRangeBehind:		handicap range for extra turbo
--	TurboAdjustBehind:		turbo adjust value (ie. engine.TurboAcceleration + turboAdjustBehind)
--	LoPosLimit = 5;						
--	HiPosLimit = 2;
--	AIExtraTurboPosLimit = 6;
--	AIExtraTurboMul = 2.f;
--	CatchUpProfileRange = 10.f
--	HandicapProfileRange = 25.f
--	HandicapProfileSpeedLimit = 100.f
--	SlideFrictionScale = 1.f
--	BrakeFrictionScale = 1.f

function CopyTable(tbl)
	local t={}

	local k,v
	for k,v in pairs(tbl) do
		if type(v) == "table" then
			t[k]=CopyTable(v)
		else
			t[k]=v
		end
	end

	return t
end

function MergeTable(tbl1,tbl2)
	if type(tbl1) ~= "table" or type(tbl2) ~= "table" then return end

	local t=CopyTable(tbl1)

	local k,v
	for k,v in pairs(tbl2) do
		if type(v) == "table" then
			if type(t[k]) ~= "table" then
				t[k]=CopyTable(v)
			else
				t[k]=MergeTable(tbl1[k],v)
			end
		else
			t[k]=v
		end
	end
	return t
end

-- Table multiplier helper function
function multable(table, multiplier)
	local newtable = {}
	for k, v in pairs( table ) do
		newtable[k] = v * multiplier
	end
	return newtable
end

DefaultRacing = 
	{
	ThrottleMax		= {1.0, 0.7, 0.5},
--	ThrottleMax		= {1.0, 0.999, 0.998},
	ThrottleRange		= {30.0, 150.0, 300.0},
--	ThrottleReduction	= 0.25,
	ThrottleReduction	= 0.0,
	TurnRange		= {300000000.0, 3000000000.0},
	TurnScale		= 4.0,
	TurboRangeAhead		= {300000.0, 100000.0},
	TurboAdjustAhead	= -0.25,
--	TurboRangeBehind	= {300000.0, 2000000.0},
	TurboRangeBehind	= {0.0, 110.0},
--	TurboRangeBehind	= {-30000.0, -30.0},
	TurboAdjustBehind	= 1.0,
}

function generateDefaultOffTrack(defaultRacingTable)
	local newtable = CopyTable(defaultRacingTable)
--	newtable.ThrottleMax = multable(defaultRacingTable.ThrottleMax, 0.85)
	return newtable
end
	
DefaultExtra = 
	{
	LoPosLimit = 9,						
	HiPosLimit = 0,
	AIExtraTurboPosLimit = 0,
	AIExtraTurboRange = {100.0, 200.0},
	AIExtraTurbo = {1.0, 5.0},
--	CatchUpProfileRange = 600000,
	CatchUpProfileRange = 120,
--	CatchUpProfileRange = -60000,
--	HandicapProfileRange = 25000000000,
	HandicapProfileSpeedLimit = 100,
	SlideFrictionScale = 1.0,
	BrakeFrictionScale = 1.0,
}

-- Levels 1-10: Derby class
-- Levels 11-20: Race class
-- Levels 21-30: Street class
-- Levels 31-40: Finals

Levels = {}
for i = 1,42 do Levels[i] = {} end

-- For Race 1 of Cup 1 in Derby Class
Levels[1] = {  
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase the handicap by reducing max throttles in handicap
							ThrottleMax = multable(DefaultRacing.ThrottleMax, 0.75),
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.30,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.0,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   -- Remove AI catchup extra turbo
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.0),
						   -- Increase the catchup range
						   AIExtraTurboRange = multable(DefaultExtra.AIExtraTurboRange, 1.5),
						   CatchUpProfileRange = DefaultExtra.CatchUpProfileRange + 50.0
					   }),
}

-- For Race 2 of Cup 1 in Derby Class
Levels[2] = MergeTable(Levels[1], 
					   {
						   Extra = {
							   CatchUpProfileRange = DefaultExtra.CatchUpProfileRange
						   }
					   })

-- For Cup 2 in Derby Class
Levels[3] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase the handicap by reducing max throttles in handicap
							ThrottleMax = multable(DefaultRacing.ThrottleMax, 0.80),
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.25,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.0,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   -- Remove AI catchup extra turbo
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.0),
					   }),
}

-- For Cup 3 in Derby Class
Levels[4] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase the handicap by reducing max throttles in handicap
							ThrottleMax = multable(DefaultRacing.ThrottleMax, 0.90),
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.0,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.1),
					   }),
}

-- For Cup 4 in Derby Class
Levels[5] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.0,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.2),
					   }),
}

-- For Cup 5 in Derby Class (Canals Special Cup)
Levels[6] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.25,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.4),
					   }),
}

-- For Cup 6 in Derby Class
Levels[7] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.5,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.7),
					   }),
}

-- For Cup 7 in Derby Class
Levels[8] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.7,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 1.0),
					   }),
}

-- For Cup 8 in Derby Class (Forest Special Cup)
Levels[9] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 0.9,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 1.0),
					   }),
}

-- For Cup 9 in Derby Class (FINALS)
Levels[10] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.10,
							-- Reduce the AI catchup by removing the extra turbo
							TurboAdjustBehind = 1.0,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   -- Remove AI catchup extra turbo
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 1.0),
					   }),
}


------ RACE CLASS -----

-- For Cup 1 in Race Class
Levels[11] = {
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = MergeTable(DefaultRacing, 
						{ 
							-- Increase ThrottleReduction to reduce AI max speed
							ThrottleReduction = DefaultRacing.ThrottleReduction + 0.15,
							TurboAdjustBehind = 0.1,
						}),
	Extra = MergeTable(DefaultExtra,
					   {
						   AIExtraTurbo = multable(DefaultExtra.AIExtraTurbo, 0.2),
					   }),
}



Levels[42] = { --- AI TUNING & TESTING PROFILE
	AirborneDelayMs		= 6000,
	Distance 			= 1500,
	Racing = CopyTable(DefaultRacing),
	Extra = DefaultExtra
}


--[[
dofile( "data/scripts/DEBUG.bed" )
DEBUGLOG("*** Handicap Script Debug ***")
TABLEDUMP(Levels[1])
--TABLEDUMP(Levels[42])
--]]

for k, v in ipairs( Levels ) do
	--v.Racing = v.Racing or DefaultRacing
	if v.Racing then
		-- Rescale ThrottleMax so that the ThrottleMax 1.0 always refers to maximum racing throttle
		for tk, tv in ipairs(v.Racing.ThrottleMax) do
			v.Racing.ThrottleMax[tk] = tv + (1 - tv) * v.Racing.ThrottleReduction
		end
		v.OffTrack = v.OffTrack or generateDefaultOffTrack(v.Racing)
		v.Airborne = v.Airborne or v.Racing
	end
end

